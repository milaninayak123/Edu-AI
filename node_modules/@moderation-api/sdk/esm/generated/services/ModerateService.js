export class ModerateService {
    constructor(httpRequest) {
        this.httpRequest = httpRequest;
    }
    /**
     * Analyze text.
     * Analyze text with your Moderation API project.
     * @param requestBody
     * @returns any Successful response
     * @throws ApiError
     */
    moderationText(requestBody) {
        return this.httpRequest.request({
            method: 'POST',
            url: '/moderate/text',
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                400: `Error response`,
            },
        });
    }
    /**
     * Analyze image
     * Analyze image with your Moderation API project
     * @param requestBody
     * @returns any Successful response
     * @throws ApiError
     */
    moderationImage(requestBody) {
        return this.httpRequest.request({
            method: 'POST',
            url: '/moderate/image',
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                400: `Error response`,
            },
        });
    }
    /**
     * Analyze video
     * Analyze video with your Moderation API project
     * @param requestBody
     * @returns any Successful response
     * @throws ApiError
     */
    moderationVideo(requestBody) {
        return this.httpRequest.request({
            method: 'POST',
            url: '/moderate/video',
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                400: `Error response`,
            },
        });
    }
    /**
     * Analyze audio
     * Analyze audio with your Moderation API project
     * @param requestBody
     * @returns any Successful response
     * @throws ApiError
     */
    moderationAudio(requestBody) {
        return this.httpRequest.request({
            method: 'POST',
            url: '/moderate/audio',
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                400: `Error response`,
            },
        });
    }
}
